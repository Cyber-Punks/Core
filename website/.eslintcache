[{"/home/noah/documents/web/Cyber-Punks/website/src/App.jsx":"1","/home/noah/documents/web/Cyber-Punks/website/src/Home.jsx":"2","/home/noah/documents/web/Cyber-Punks/website/src/reportWebVitals.js":"3","/home/noah/documents/web/Cyber-Punks/website/src/index.js":"4"},{"size":1120,"mtime":1608435306564,"results":"5","hashOfConfig":"6"},{"size":2579,"mtime":1608449904700,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1608433082737,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1608433082736,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lbxyqs",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/noah/documents/web/Cyber-Punks/website/src/App.jsx",[],"/home/noah/documents/web/Cyber-Punks/website/src/Home.jsx",["19"],"import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Card from \"react-bootstrap/Card\";\n\nimport logo from \"./logo.jpg\";\n\nconst HomeDiv = styled.div`\npadding: 20px;\n`;\n\nconst LogoImg = styled.img`\nwidth: 300px;\n`;\n\n/**\n * Displays a get content form and handles calling the get content endpoint.\n * @params props.setContent State setter for the content state. Takes the root content\n *     node object as a value.\n */\nfunction GetContent(props) {\n    const setContent = props.setContent;\n\n    const [isLoading, setIsLoading] = useState(false);\n    \n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        // Get content\n        setIsLoading(true);\n\n        const resp = await fetch(\"/example-content.json\");\n        const body = await resp.json();\n        \n        setIsLoading(false);\n        setContent(body);\n    };\n\n    let body = (\n        <Form onSubmit={onSubmit}>\n            <Form.Group controlId=\"contentUri\">\n                <Form.Label>Content URL</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"https://reddit.com\" />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n                View Content\n            </Button>\n        </Form>\n    );\n\n    if (isLoading === true) {\n        body = (\n            <div>\n                <Spinner animation=\"border\" />\n            </div>\n        );\n    }\n    \n    return (\n        <>\n            <LogoImg src={logo} />\n\n            {body}\n        </>\n    );\n}\n\n/**\n * Displays a content node and recursively displays its children.\n * @params props.content The ContentNode object.\n */\nfunction ContentNode(props) {\n    let content = props.content;\n\n    if (Array.isArray(content.children) === false) {\n        content.children = [ content.children ];\n    }\n\n    return (\n        <div>\n            {content.source}\n            {content.name}\n            {content.body}\n            <ul>\n                {content.children.map((c) => (\n                    <li key={c.source}>\n                        <ContentNode content={c} />\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default function Home() {\n    const [content, setContent] = useState(null);\n    \n    return (\n        <HomeDiv>\n            {(content === null && <GetContent setContent={setContent} />) ||\n             <ContentNode content={content} />\n            }\n        </HomeDiv>\n    );\n}\n","/home/noah/documents/web/Cyber-Punks/website/src/reportWebVitals.js",[],"/home/noah/documents/web/Cyber-Punks/website/src/index.js",[],{"ruleId":"20","severity":1,"message":"21","line":6,"column":8,"nodeType":"22","messageId":"23","endLine":6,"endColumn":12},"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar"]